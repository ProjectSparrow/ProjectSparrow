<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Instance variables

// only one per game
if (instance_number(object_index) &gt; 1) instance_destroy();

scr_init_gamepad();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Free up memory

scr_destroy_gamepad();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check for input

var len = ds_list_size(registered_controllers);
for (var i = 0; i &lt; len; i++)
{
    var controller_id = ds_list_find_value(registered_controllers, i);
    
    // skip controller if disconnected
    if(!gamepad_is_supported() || !gamepad_is_connected(controller_id)) { continue; }
    
    // face buttons
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_face1);
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_face2);
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_face3);
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_face4);
    
    // Shoulder buttons
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_shoulderl);
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_shoulderlb);
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_shoulderr);
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_shoulderrb);
    
    // Other Buttons
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_select);
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_start);
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_stickl);
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_stickr);
    
    // D-Pad buttons
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_padu);
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_padd);
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_padl);
    scr_gamepad_trigger_button(controller_id, DEVICE_TYPE.GAMEPAD, gp_padr);
    
    // Stick Input
    scr_gamepad_trigger_axis(controller_id, DEVICE_TYPE.GAMEPAD, gp_axislh, BUTTON_STATES.AXIS_H);
    scr_gamepad_trigger_axis(controller_id, DEVICE_TYPE.GAMEPAD, gp_axislv, BUTTON_STATES.AXIS_V);
    scr_gamepad_trigger_axis(controller_id, DEVICE_TYPE.GAMEPAD, gp_axisrh, BUTTON_STATES.AXIS_H);
    scr_gamepad_trigger_axis(controller_id, DEVICE_TYPE.GAMEPAD, gp_axisrv, BUTTON_STATES.AXIS_V);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gamepad added / lost event

switch(async_load[? "event_type"])             // Parse the async_load map to see which event has been triggered
{
case "gamepad discovered":                     // A game pad has been discovered
    var device = async_load[? "pad_index"];       // Get the pad index value from the async_load map
    
    scr_gamepad_register(device);
    
    break;
case "gamepad lost":                           // Gamepad has been removed or otherwise disabled
    var device = async_load[? "pad_index"];       // Get the pad index
    
    scr_trigger_event(global.gamepad_lost_event, device);
    
    if (global.gamepad_trigger_unregister_on_disconnect)
    {
        scr_gamepad_unregister(device);
    }
    
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

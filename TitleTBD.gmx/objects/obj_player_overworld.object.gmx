<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_overworld_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Fixed Rotation and Movement Varibles
phy_fixed_rotation = true
orispd = 6
spd = 6
imgspd = .2
runspd = spd*2
dashspd = spd*4
dashdeadzone = 100
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spd = orispd
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spd = orispd
alarm[1] = room_speed
alarm[0] = -2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement w/ Animation,Run,&amp; Dash
right = keyboard_check(vk_right)
left = keyboard_check(vk_left)
up = keyboard_check(vk_up)
down = keyboard_check(vk_down)
run = keyboard_check(vk_shift)
dash = keyboard_check_pressed(ord('Z'))


if (right)
{
    phy_position_x += spd
    sprite_index = spr_player_overworld_right
    image_speed = imgspd
}

if (down)
{
    phy_position_y += spd
    sprite_index = spr_player_overworld_down
    image_speed = imgspd
}

if (left)
{
    phy_position_x -= spd
    sprite_index = spr_player_overworld_left
    image_speed = imgspd
}

if (up)
{
    phy_position_y -= spd
    sprite_index = spr_player_overworld_up
    image_speed = imgspd
}

if (!up and !down and !left and !right)
{
    image_speed = 0
    image_index = 0
}

if (run and alarm[0] == -1)
{
    alarm[0] = room_speed*2
    spd = runspd
}
if (!run and spd == runspd)
{
    alarm[0] = 1
}

if (dash and !position_meeting(x &lt;= dashdeadzone,y &lt;= dashdeadzone,obj_invis_barrier) and spd != runspd or dash and !position_meeting(x &lt;= -dashdeadzone,y &lt;= -dashdeadzone,obj_invis_barrier) and spd != runspd or dash and !position_meeting(x&lt;= -dashdeadzone,y &lt;= dashdeadzone,obj_invis_barrier) and spd != runspd or dash and !position_meeting(x &lt;= dashdeadzone,y &lt;= -dashdeadzone,obj_invis_barrier) and spd != runspd)
{
    alarm[2] = room_speed/6
    spd = dashspd
    var dahs = instance_create(x,y,obj_dasheffect)
    obj_dasheffect.sprite_index = sprite_index
    obj_dasheffect.image_index = image_index  
}
if (dash and position_meeting(x &lt;= dashdeadzone,y &lt;= dashdeadzone,obj_invis_barrier) and spd == runspd or dash and position_meeting(x &lt;= -dashdeadzone,y &lt;= -dashdeadzone,obj_invis_barrier) and spd == runspd or dash and position_meeting(x&lt;= -dashdeadzone,y &lt;= dashdeadzone,obj_invis_barrier) and spd == runspd or dash and position_meeting(x &lt;= dashdeadzone,y &lt;= -dashdeadzone,obj_invis_barrier) and spd == runspd)
{
    alarm[2] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_invis_barrier">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Respect Authority
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,28</point>
    <point>32,28</point>
    <point>32,44</point>
    <point>0,44</point>
  </PhysicsShapePoints>
</object>
